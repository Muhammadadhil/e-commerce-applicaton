<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Furbar</title>
        <style>
            @import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");
            body {
                font-family: "Poppins", sans-serif;
                font-weight: 400;
                background-color: #f2f2f2;
                margin: 0;
                padding: 0;
            }

            .container {
                max-width: 400px;
                margin: 50px auto;
                background-color: #fff;
                border-radius: 10px;
                padding: 20px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }

            .otp-input-container {
                display: flex;
                justify-content: center;
                margin-top: 20px;
            }

            .otp-input {
                width: 50px;
                height: 50px;
                font-size: 24px;
                text-align: center;
                margin: 0 5px;
                border: 1px solid #ccc;
                border-radius: 5px;
            }

            .otp-input:focus {
                outline: none;
                border-color: #007bff;
            }

            button {
                margin-top: 20px;
                padding: 10px 20px;
                background-color: #ffc107;
                color: #fff;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                font-size: 16px;
            }

            button:hover {
                background-color: #ffd350;
            }

            #otp-error {
                color: red;
                font-size: 16px;
                margin-top: 10px;
                text-align: center;
            }
            .verify-button {
                display: flex;
                justify-content: center;
            }
            .timer-resend {
                margin-top: 20px;
                display: flex;
                justify-content: center;
            }
            .timer {
                display: flex;
                justify-content: center;
            }
            .timer p {
                font-size: smaller;
            }
            #validateError {
                font-size: smaller;
                text-align: center; 
                margin-top: 10px; 
}
        </style>
    </head>
    <body>
        
        <div class="container">
            <h2 style="text-align: center">Enter OTP</h2>
            <div class="otp-input-container" id="otpForm">
                <input class="otp-input" type="text" id="num1" maxlength="1" oninput="focusNext(event)" onkeydown="focusPrevious(event)" />
                <input class="otp-input" type="text" id="num2" maxlength="1" oninput="focusNext(event)" onkeydown="focusPrevious(event)" />
                <input class="otp-input" type="text" id="num3" maxlength="1" oninput="focusNext(event)" onkeydown="focusPrevious(event)" />
                <input class="otp-input" type="text" id="num4" maxlength="1" oninput="focusNext(event)" onkeydown="focusPrevious(event)" />
            </div>
            <input class="userId" type="text" name="id" value="<%=OtpUserId%>" hidden />
            <div class="verify-button">
                <button class="verify-button">Verify</button>
            </div>

            <div class="timer-resend">
                <p id="resendOtp-button" onclick="timer()" hidden>
                    didn't get the otp
                    <button onclick="resendOtp()">resend otp</button>
                </p>
            </div>
            <div class="timer">
                <p id="timerDisplay" class="text-center"></p>
            </div>
            <div class="errors  ">
                <p id="validateError" style="color: red;" class="text-danger "></p>
                <p id="otp-error" class="text-danger text-center"></p>
            </div>
        </div>

    
        <script>
            function focusNext(event) {
                const currentInput = event.target;
                // console.log(`currentINput: ${currentInput}`);
                const nextInput = currentInput.nextElementSibling;
                // console.log(`next input: ${nextInput}`);

                if (currentInput.value.length === 1 && nextInput) {
                    nextInput.focus();
                }
            }

            function focusPrevious(event) {
                const currentInput = event.target;
                const previousInput = currentInput.previousElementSibling;

                if (event.key === "Backspace" && !currentInput.value && previousInput) {
                    previousInput.focus();
                }
            }
            document.addEventListener('DOMContentLoaded',()=>{
                
            //event listener for submit button clicked
            const verfiyButton=document.querySelector('.verify-button');
            verfiyButton.addEventListener('click',(event)=>{
                if(vaidateOtpField()){
                    verifyOTP();
                }
            })

            //validating otp field
            function vaidateOtpField() {
                const num1 = document.getElementById("num1").value;
                const num2 = document.getElementById("num2").value;
                const num3 = document.getElementById("num3").value;
                const num4 = document.getElementById("num4").value;

                const otpValidateError = document.getElementById("validateError");

                if (!num1.trim() || !num2.trim() || !num3.trim() || !num4.trim()) {
                    console.log('num3.trim:',num3.trim());

                    otpValidateError.textContent = "otp field should not be empty";
                    return false;
                }else{
                    otpValidateError.textContent = "";

                }
                return true
            }

            const otpUserId = document.querySelector(".userId").value;
            console.log("opt userid:" + otpUserId);


            //sending request to server
            function verifyOTP() {
                // e.preventDefault();
                //alerting the otp entered
                console.log("verify OTP func reached!!");
                // const num1 = document.getElementById("num1").value;
                // const num2 = document.getElementById("num2").value;
                // const num3 = document.getElementById("num3").value;
                // const num4 = document.getElementById("num4").value;

                let otp = "";
                document.querySelectorAll(".otp-input").forEach(function (input) {
                    otp += input.value;
                });
                alert("Entered OTP: " + otp);

                const otpErrorElement = document.getElementById("otp-error");

                fetch("/verifyOtp", {
                    method: "POST",
                    body: JSON.stringify({
                        num1,
                        num2,
                        num3,
                        num4,
                        otpUserId,
                    }),
                    headers: {
                        "content-type": "application/json;charset=utf-8",
                    },
                    credentials: "include",
                })
                    .then((response) => response.json())
                    .then((data) => {
                        console.log("data : ", data);
                        if (data.otp == false) {
                            otpErrorElement.textContent = data.message;
                        } else if (data.otp == "expired") {
                            otpErrorElement.textContent = data.message;
                        } else if (data.otp == "invalid") {
                            otpErrorElement.textContent = data.message;
                        } else if (data.otp == "noRecord") {
                            otpErrorElement.textContent = data.message;
                        } else if (data.otp == true) {
                            window.location.href = "/";
                        }
                    })
                    .catch((error) => {
                        // Handle errors
                        console.error("Error:", error.message);
                    });

                setTimeout(() => {
                    otpErrorElement.textContent = "";
                }, 6000);
            }
            //timer for the otp
            function timer() {
                let secondsRemaining = 60;
                let display = document.getElementById("timerDisplay");
                let resendOtpButton = document.getElementById("resendOtp-button");

                let timerInterval = setInterval(() => {
                    display.innerHTML = `OTP expire within ${secondsRemaining} seconds`;

                    if (secondsRemaining <= 0) {
                        clearInterval(timerInterval);
                        display.innerHTML = "";
                        resendOtpButton.hidden = false;
                    } else {
                        secondsRemaining--;
                    }
                }, 1000);
            }
            //load the timer when otp page loaded
            window.onload = function () {
                timer();
            };

            function resendOtp() {
                fetch(`/resendOtp?id=${otpUserId}`, {
                    method: "GET",
                    headers: {
                        "content-type": "application/json;charset=utf-8",
                    },
                })
                    .then((response) => {
                        if (!response.ok) {
                            throw new Error("Network response was not ok");
                        }
                    })
                    .then((data) => {
                        console.log("this is data come from the req:" + data);
                    })
                    .catch((error) => console.log("this is error from:" + error));
            }
            })
        </script>
    </body>
</html>
